interface retro_language {
  const long RETRO_LANGUAGE_CHINESE_SIMPLIFIED = 11;
  const long RETRO_LANGUAGE_CHINESE_TRADITIONAL = 10;
  const long RETRO_LANGUAGE_KOREAN = 9;
  const long RETRO_LANGUAGE_RUSSIAN = 8;
  const long RETRO_LANGUAGE_PORTUGUESE = 7;
  const long RETRO_LANGUAGE_DUTCH = 6;
  const long RETRO_LANGUAGE_ITALIAN = 5;
  const long RETRO_LANGUAGE_GERMAN = 4;
  const long RETRO_LANGUAGE_SPANISH = 3;
  const long RETRO_LANGUAGE_FRENCH = 2;
  const long RETRO_LANGUAGE_JAPANESE = 1;
  const long RETRO_LANGUAGE_ENGLISH = 0;
};
interface retro_key {
  const long RETROK_UNDO = 322;
  const long RETROK_EURO = 321;
  const long RETROK_POWER = 320;
  const long RETROK_MENU = 319;
  const long RETROK_BREAK = 318;
  const long RETROK_SYSREQ = 317;
  const long RETROK_PRINT = 316;
  const long RETROK_HELP = 315;
  const long RETROK_COMPOSE = 314;
  const long RETROK_MODE = 313;
  const long RETROK_RSUPER = 312;
  const long RETROK_LSUPER = 311;
  const long RETROK_LMETA = 310;
  const long RETROK_RMETA = 309;
  const long RETROK_LALT = 308;
  const long RETROK_RALT = 307;
  const long RETROK_LCTRL = 306;
  const long RETROK_RCTRL = 305;
  const long RETROK_LSHIFT = 304;
  const long RETROK_RSHIFT = 303;
  const long RETROK_SCROLLOCK = 302;
  const long RETROK_CAPSLOCK = 301;
  const long RETROK_NUMLOCK = 300;
  const long RETROK_F15 = 296;
  const long RETROK_F14 = 295;
  const long RETROK_F13 = 294;
  const long RETROK_F12 = 293;
  const long RETROK_F11 = 292;
  const long RETROK_F10 = 291;
  const long RETROK_F9 = 290;
  const long RETROK_F8 = 289;
  const long RETROK_F7 = 288;
  const long RETROK_F6 = 287;
  const long RETROK_F5 = 286;
  const long RETROK_F4 = 285;
  const long RETROK_F3 = 284;
  const long RETROK_F2 = 283;
  const long RETROK_F1 = 282;
  const long RETROK_PAGEDOWN = 281;
  const long RETROK_PAGEUP = 280;
  const long RETROK_END = 279;
  const long RETROK_HOME = 278;
  const long RETROK_INSERT = 277;
  const long RETROK_LEFT = 276;
  const long RETROK_RIGHT = 275;
  const long RETROK_DOWN = 274;
  const long RETROK_UP = 273;
  const long RETROK_KP_EQUALS = 272;
  const long RETROK_KP_ENTER = 271;
  const long RETROK_KP_PLUS = 270;
  const long RETROK_KP_MINUS = 269;
  const long RETROK_KP_MULTIPLY = 268;
  const long RETROK_KP_DIVIDE = 267;
  const long RETROK_KP_PERIOD = 266;
  const long RETROK_KP9 = 265;
  const long RETROK_KP8 = 264;
  const long RETROK_KP7 = 263;
  const long RETROK_KP6 = 262;
  const long RETROK_KP5 = 261;
  const long RETROK_KP4 = 260;
  const long RETROK_KP3 = 259;
  const long RETROK_KP2 = 258;
  const long RETROK_KP1 = 257;
  const long RETROK_KP0 = 256;
  const long RETROK_DELETE = 127;
  const long RETROK_z = 122;
  const long RETROK_y = 121;
  const long RETROK_x = 120;
  const long RETROK_w = 119;
  const long RETROK_v = 118;
  const long RETROK_u = 117;
  const long RETROK_t = 116;
  const long RETROK_s = 115;
  const long RETROK_r = 114;
  const long RETROK_q = 113;
  const long RETROK_p = 112;
  const long RETROK_o = 111;
  const long RETROK_n = 110;
  const long RETROK_m = 109;
  const long RETROK_l = 108;
  const long RETROK_k = 107;
  const long RETROK_j = 106;
  const long RETROK_i = 105;
  const long RETROK_h = 104;
  const long RETROK_g = 103;
  const long RETROK_f = 102;
  const long RETROK_e = 101;
  const long RETROK_d = 100;
  const long RETROK_c = 99;
  const long RETROK_b = 98;
  const long RETROK_a = 97;
  const long RETROK_BACKQUOTE = 96;
  const long RETROK_UNDERSCORE = 95;
  const long RETROK_CARET = 94;
  const long RETROK_RIGHTBRACKET = 93;
  const long RETROK_BACKSLASH = 92;
  const long RETROK_LEFTBRACKET = 91;
  const long RETROK_AT = 64;
  const long RETROK_QUESTION = 63;
  const long RETROK_GREATER = 62;
  const long RETROK_EQUALS = 61;
  const long RETROK_LESS = 60;
  const long RETROK_SEMICOLON = 59;
  const long RETROK_COLON = 58;
  const long RETROK_9 = 57;
  const long RETROK_8 = 56;
  const long RETROK_7 = 55;
  const long RETROK_6 = 54;
  const long RETROK_5 = 53;
  const long RETROK_4 = 52;
  const long RETROK_3 = 51;
  const long RETROK_2 = 50;
  const long RETROK_1 = 49;
  const long RETROK_0 = 48;
  const long RETROK_SLASH = 47;
  const long RETROK_PERIOD = 46;
  const long RETROK_MINUS = 45;
  const long RETROK_COMMA = 44;
  const long RETROK_PLUS = 43;
  const long RETROK_ASTERISK = 42;
  const long RETROK_RIGHTPAREN = 41;
  const long RETROK_LEFTPAREN = 40;
  const long RETROK_QUOTE = 39;
  const long RETROK_AMPERSAND = 38;
  const long RETROK_DOLLAR = 36;
  const long RETROK_HASH = 35;
  const long RETROK_QUOTEDBL = 34;
  const long RETROK_EXCLAIM = 33;
  const long RETROK_SPACE = 32;
  const long RETROK_ESCAPE = 27;
  const long RETROK_PAUSE = 19;
  const long RETROK_RETURN = 13;
  const long RETROK_CLEAR = 12;
  const long RETROK_TAB = 9;
  const long RETROK_BACKSPACE = 8;
  const long RETROK_UNKNOWN = 0,
  const long RETROK_FIRST = 0,
};
interface retro_mod {
  const long RETROKMOD_SCROLLOCK = 64;
  const long RETROKMOD_CAPSLOCK = 32;
  const long RETROKMOD_NUMLOCK = 16;
  const long RETROKMOD_META = 8;
  const long RETROKMOD_ALT = 4;
  const long RETROKMOD_CTRL = 2;
  const long RETROKMOD_SHIFT = 1;
  const long RETROKMOD_NONE = 0;
};
interface retro_log_level {
  const long RETRO_LOG_DEBUG = 0;
  const long RETRO_LOG_INFO = 1;
  const long RETRO_LOG_WARN = 2;
  const long RETRO_LOG_ERROR = 3;
};
interface retro_sensor_action {
  const long RETRO_SENSOR_ACCELEROMETER_ENABLE = 0;
  const long RETRO_SENSOR_ACCELEROMETER_DISABLE = 1;
};
interface retro_camera_buffer {
  const long RETRO_CAMERA_BUFFER_OPENGL_TEXTURE = 0;
  const long RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER = 1;
};
interface retro_rumble_effect {
  const long RETRO_RUMBLE_STRONG = 0;
  const long RETRO_RUMBLE_WEAK = 1;
};
interface retro_hw_context_type {
  const long RETRO_HW_CONTEXT_OPENGLES_VERSION = 5;
  const long RETRO_HW_CONTEXT_OPENGLES3 = 4;
  const long RETRO_HW_CONTEXT_OPENGL_CORE = 3;
  const long RETRO_HW_CONTEXT_OPENGLES2 = 2;
  const long RETRO_HW_CONTEXT_OPENGL = 1;
  const long RETRO_HW_CONTEXT_NONE = 0;
};
interface retro_pixel_format {
  const long RETRO_PIXEL_FORMAT_RGB565 = 2;
  const long RETRO_PIXEL_FORMAT_XRGB8888 = 1;
  const long RETRO_PIXEL_FORMAT_RGB565 = 0;
};
interface retro {
  const long RETRO_API_VERSION = 1;
  const long RETRO_DEVICE_TYPE_SHIFT = 8;
  const long RETRO_DEVICE_NONE = 0;
  const long RETRO_DEVICE_JOYPAD = 1;
  const long RETRO_DEVICE_MOUSE = 2;
  const long RETRO_DEVICE_KEYBOARD = 3;
  const long RETRO_DEVICE_LIGHTGUN = 4;
  const long RETRO_DEVICE_ANALOG = 5;
  const long RETRO_DEVICE_POINTER = 6;
  const long RETRO_DEVICE_ID_JOYPAD_B = 0;
  const long RETRO_DEVICE_ID_JOYPAD_Y = 1;
  const long RETRO_DEVICE_ID_JOYPAD_SELECT = 2;
  const long RETRO_DEVICE_ID_JOYPAD_START = 3;
  const long RETRO_DEVICE_ID_JOYPAD_UP = 4;
  const long RETRO_DEVICE_ID_JOYPAD_DOWN = 5;
  const long RETRO_DEVICE_ID_JOYPAD_LEFT = 6;
  const long RETRO_DEVICE_ID_JOYPAD_RIGHT = 7;
  const long RETRO_DEVICE_ID_JOYPAD_A = 8;
  const long RETRO_DEVICE_ID_JOYPAD_X = 9;
  const long RETRO_DEVICE_ID_JOYPAD_L = 10;
  const long RETRO_DEVICE_ID_JOYPAD_R = 11;
  const long RETRO_DEVICE_ID_JOYPAD_L2 = 12;
  const long RETRO_DEVICE_ID_JOYPAD_R2 = 13;
  const long RETRO_DEVICE_ID_JOYPAD_L3 = 14;
  const long RETRO_DEVICE_ID_JOYPAD_R3 = 15;
  const long RETRO_DEVICE_INDEX_ANALOG_LEFT = 0;
  const long RETRO_DEVICE_INDEX_ANALOG_RIGHT = 1;
  const long RETRO_DEVICE_ID_ANALOG_X = 0;
  const long RETRO_DEVICE_ID_ANALOG_Y = 1;
  const long RETRO_DEVICE_ID_MOUSE_X = 0;
  const long RETRO_DEVICE_ID_MOUSE_Y = 1;
  const long RETRO_DEVICE_ID_MOUSE_LEFT = 2;
  const long RETRO_DEVICE_ID_MOUSE_RIGHT = 3;
  const long RETRO_DEVICE_ID_MOUSE_WHEELUP = 4;
  const long RETRO_DEVICE_ID_MOUSE_WHEELDOWN = 5;
  const long RETRO_DEVICE_ID_MOUSE_MIDDLE = 6;
  const long RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELUP = 7;
  const long RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELDOWN = 8;
  const long RETRO_DEVICE_ID_LIGHTGUN_X = 0;
  const long RETRO_DEVICE_ID_LIGHTGUN_Y = 1;
  const long RETRO_DEVICE_ID_LIGHTGUN_TRIGGER = 2;
  const long RETRO_DEVICE_ID_LIGHTGUN_CURSOR = 3;
  const long RETRO_DEVICE_ID_LIGHTGUN_TURBO = 4;
  const long RETRO_DEVICE_ID_LIGHTGUN_PAUSE = 5;
  const long RETRO_DEVICE_ID_LIGHTGUN_START = 6;
  const long RETRO_DEVICE_ID_POINTER_X = 0;
  const long RETRO_DEVICE_ID_POINTER_Y = 1;
  const long RETRO_DEVICE_ID_POINTER_PRESSED = 2;
  const long RETRO_REGION_NTSC = 0;
  const long RETRO_REGION_PAL = 1;
  const long RETRO_MEMORY_SAVE_RAM = 0;
  const long RETRO_MEMORY_RTC = 1;
  const long RETRO_MEMORY_SYSTEM_RAM = 2;
  const long RETRO_MEMORY_VIDEO_RAM = 3;
  const long RETRO_ENVIRONMENT_SET_ROTATION = 1;
  const long RETRO_ENVIRONMENT_GET_OVERSCAN = 2;
  const long RETRO_ENVIRONMENT_GET_CAN_DUPE = 3;
  const long RETRO_ENVIRONMENT_SET_MESSAGE = 6;
  const long RETRO_ENVIRONMENT_SHUTDOWN = 7;
  const long RETRO_ENVIRONMENT_SET_PERFORMANCE_LEVEL = 8;
  const long RETRO_ENVIRONMENT_GET_SYSTEM_DIRECTORY = 9;
  const long RETRO_ENVIRONMENT_SET_PIXEL_FORMAT = 10;
  const long RETRO_ENVIRONMENT_SET_INPUT_DESCRIPTORS = 11;
  const long RETRO_ENVIRONMENT_SET_KEYBOARD_CALLBACK = 12;
  const long RETRO_ENVIRONMENT_SET_DISK_CONTROL_INTERFACE = 13;
  const long RETRO_ENVIRONMENT_SET_HW_RENDER = 14;
  const long RETRO_ENVIRONMENT_GET_VARIABLE = 15;
  const long RETRO_ENVIRONMENT_SET_VARIABLES = 16;
  const long RETRO_ENVIRONMENT_GET_VARIABLE_UPDATE = 17;
  const long RETRO_ENVIRONMENT_SET_SUPPORT_NO_GAME = 18;
  const long RETRO_ENVIRONMENT_GET_LIBRETRO_PATH = 19;
  const long RETRO_ENVIRONMENT_SET_AUDIO_CALLBACK = 22;
  const long RETRO_ENVIRONMENT_SET_FRAME_TIME_CALLBACK = 21;
  const long RETRO_ENVIRONMENT_GET_RUMBLE_INTERFACE = 23;
  const long RETRO_ENVIRONMENT_GET_INPUT_DEVICE_CAPABILITIES = 24;
  const long RETRO_ENVIRONMENT_GET_LOG_INTERFACE = 27;
  const long RETRO_ENVIRONMENT_GET_PERF_INTERFACE = 28;
  const long RETRO_ENVIRONMENT_GET_LOCATION_INTERFACE = 29;
  const long RETRO_ENVIRONMENT_GET_CONTENT_DIRECTORY = 30;
  const long RETRO_ENVIRONMENT_GET_CORE_ASSETS_DIRECTORY = 30;
  const long RETRO_ENVIRONMENT_GET_SAVE_DIRECTORY = 31;
  const long RETRO_ENVIRONMENT_SET_SYSTEM_AV_INFO = 32;
  const long RETRO_ENVIRONMENT_SET_PROC_ADDRESS_CALLBACK = 33;
  const long RETRO_ENVIRONMENT_SET_SUBSYSTEM_INFO = 34;
  const long RETRO_ENVIRONMENT_SET_CONTROLLER_INFO = 35;
  const long RETRO_ENVIRONMENT_SET_GEOMETRY = 37;
  const long RETRO_ENVIRONMENT_GET_USERNAME = 38;
  const long RETRO_ENVIRONMENT_GET_LANGUAGE = 39;
  const long RETRO_MEMDESC_CONST = 1;
  const long RETRO_MEMDESC_BIGENDIAN = 2;
  const long RETRO_MEMDESC_ALIGN_2 = 65536;
  const long RETRO_MEMDESC_ALIGN_4 = 131072;
  const long RETRO_MEMDESC_ALIGN_8 = 196608;
  const long RETRO_MEMDESC_MINSIZE_2 = 16777216;
  const long RETRO_MEMDESC_MINSIZE_4 = 33554432;
  const long RETRO_MEMDESC_MINSIZE_8 = 50331648;
  const long RETRO_SIMD_SSE = 1;
  const long RETRO_SIMD_SSE2 = 2;
  const long RETRO_SIMD_VMX = 4;
  const long RETRO_SIMD_VMX128 = 8;
  const long RETRO_SIMD_AVX = 16;
  const long RETRO_SIMD_NEON = 32;
  const long RETRO_SIMD_SSE3 = 64;
  const long RETRO_SIMD_SSSE3 = 128;
  const long RETRO_SIMD_MMX = 256;
  const long RETRO_SIMD_MMXEXT = 512;
  const long RETRO_SIMD_SSE4 = 1024;
  const long RETRO_SIMD_SSE42 = 2048;
  const long RETRO_SIMD_AVX2 = 4096;
  const long RETRO_SIMD_VFPU = 8192;
  const long RETRO_SIMD_PS = 16384;
  const long RETRO_SIMD_AES = 32768;
  const long RETRO_SIMD_VFPV3 = 65536;
  const long RETRO_SIMD_VFPV4 = 131072;
  const long RETRO_SENSOR_ACCELEROMETER_X = 1;
  const long RETRO_SENSOR_ACCELEROMETER_Y = 1;
  const long RETRO_SENSOR_ACCELEROMETER_Z = 2;

  void retro_set_environment(retro_environment_t cb);
  void retro_set_video_refresh(retro_video_refresh_t cb);
  void retro_set_audio_sample(retro_audio_sample_t arg);
  void retro_set_audio_sample_batch(retro_audio_sample_batch_t cb);
  void retro_set_input_poll(retro_input_poll_t cb);
  void retro_set_input_state(retro_input_state_t cb);
  void retro_init();
  void retro_deinit();
  unsigned long long retro_api_version();
  void retro_get_system_info(retro_system_info info);
  void retro_get_system_av_info(retro_system_av_info info);
  void retro_set_controller_port_device(unsigned long device, unsigned long port);
  void retro_reset();
  void retro_run();
  unsigned long long retro_serialize_size();
  bool retro_serialize(unsigned long size);
  bool retro_unserialize(unsigned long size);
  void retro_cheat_reset();
  void retro_cheat_set(char code, bool enabled, unsigned long index);
  bool retro_load_game(retro_game_info game);
  bool retro_load_game_special(unsigned long num_info, retro_game_info info, unsigned long game_type);
  void retro_unload_game();
  unsigned long long retro_get_region();
  void retro_get_memory_data(unsigned long id);
  unsigned long long retro_get_memory_size(unsigned long id);
};
interface retro_memory_descriptor {
  attribute uint64_t flags;
  attribute unsigned long offset;
  attribute unsigned long start;
  attribute unsigned long select;
  attribute unsigned long disconnect;
  attribute unsigned long len;
  attribute DOMString addrspace;
};
interface retro_memory_map {
  attribute retro_memory_descriptor[] descriptors;
  attribute unsigned long num_descriptors;
};
interface retro_controller_description {
  attribute DOMString desc;
  attribute unsigned long id;
};
interface retro_controller_info {
  attribute retro_controller_description[] types;
  attribute unsigned long num_types;
};
interface retro_subsystem_memory_info {
  attribute DOMString extension;
  attribute unsigned long type;
};
interface retro_subsystem_rom_info {
  attribute DOMString desc;
  attribute DOMString valid_extensions;
  attribute bool need_fullpath;
  attribute bool block_extract;
  attribute bool required;
  attribute DOMString memory;
  attribute unsigned long num_memory;
};
interface retro_subsystem_info {
  attribute DOMString desc;
  attribute DOMString ident;
  attribute DOMString[] roms;
  attribute unsigned long num_roms;
  attribute unsigned long id;
};
interface retro_get_proc_address_interface {
  attribute retro_get_proc_address_t get_proc_address;
};
interface retro_log_callback {
  attribute retro_log_printf_t log;
};
interface retro_perf_counter {
  attribute DOMString ident;
  attribute retro_perf_tick_t start;
  attribute retro_perf_tick_t total;
  attribute retro_perf_tick_t call_cnt;
  attribute bool registered;
};
interface retro_perf_callback {
  attribute retro_perf_get_time_usec_t get_time_usec;
  attribute retro_get_cpu_features_t get_cpu_features;
  attribute retro_perf_get_counter_t get_perf_counter;
  attribute retro_perf_register_t perf_register;
  attribute retro_perf_start_t perf_start;
  attribute retro_perf_stop_t perf_stop;
  attribute retro_perf_log_t perf_log;
};
interface retro_sensor_interface {
  attribute retro_set_sensor_state_t set_sensor_state;
  attribute retro_sensor_get_input_t get_sensor_input;
};
interface retro_camera_callback {
  attribute uint64_t caps;
  attribute unsigned long width;
  attribute unsigned long height;
  attribute retro_camera_start_t start;
  attribute retro_camera_stop_t stop;
  attribute retro_camera_frame_raw_framebuffer_t frame_raw_framebuffer;
  attribute retro_camera_frame_opengl_texture_t frame_opengl_texture;
  attribute retro_camera_lifetime_status_t initialized;
  attribute retro_camera_lifetime_status_t deinitialized;
};
interface retro_location_callback {
  attribute retro_location_start_t start;
  attribute retro_location_stop_t stop;
  attribute retro_location_get_position_t get_position;
  attribute retro_location_set_interval_t set_interval;
  attribute retro_location_lifetime_status_t initialized;
  attribute retro_location_lifetime_status_t deinitialized;
};
interface retro_rumble_interface {
  attribute retro_set_rumble_state_t set_rumble_state;
};
interface retro_audio_callback {
  attribute retro_audio_callback_t callback;
  attribute retro_audio_set_state_callback_t set_state;
};
interface retro_frame_time_callback {
  attribute retro_frame_time_callback_t callback;
  attribute retro_usec_t reference;
};
interface retro_hw_render_callback {
  attribute retro_hw_context_type context_type;
  attribute retro_hw_context_reset_t context_reset;
  attribute retro_hw_get_current_framebuffer_t get_current_framebuffer;
  attribute retro_hw_get_proc_address_t get_proc_address;
  attribute bool depth;
  attribute bool stencil;
  attribute bool bottom_left_origin;
  attribute unsigned long version_major;
  attribute unsigned long version_minor;
  attribute bool cache_context;
  attribute retro_hw_context_reset_t context_destroy;
  attribute bool debug_context;
};
interface retro_keyboard_callback {
  attribute retro_keyboard_event_t callback;
};
interface retro_game_info {
  attribute DOMString path;
  attribute void * data;
  attribute unsigned long size;
  attribute DOMString meta;
};
interface retro_disk_control_callback {
  attribute retro_set_eject_state_t set_eject_state;
  attribute retro_get_eject_state_t get_eject_state;
  attribute retro_get_image_index_t get_image_index;
  attribute retro_set_image_index_t set_image_index;
  attribute retro_get_num_images_t get_num_images;
  attribute retro_replace_image_index_t replace_image_index;
  attribute retro_add_image_index_t add_image_index;
};
interface retro_message {
  attribute DOMString msg;
  attribute unsigned long frames;
};
interface retro_input_descriptor {
  attribute unsigned long port;
  attribute unsigned long device;
  attribute unsigned long index;
  attribute unsigned long id;
  attribute DOMString description;
};
interface retro_system_info {
  attribute DOMString library_name;
  attribute DOMString library_version;
  attribute DOMString valid_extensions;
  attribute bool need_fullpath;
  attribute bool block_extract;
};
interface retro_game_geometry {
  attribute unsigned long base_width;
  attribute unsigned long base_height;
  attribute unsigned long max_width;
  attribute unsigned long max_height;
  attribute float aspect_ratio;
};
interface retro_system_timing {
  attribute double fps;
  attribute double sample_rate;
};
interface retro_system_av_info {
  attribute unsigned long geometry;
  attribute unsigned long timing;
};
interface retro_variable {
  attribute DOMString key;
  attribute DOMString value;
};
